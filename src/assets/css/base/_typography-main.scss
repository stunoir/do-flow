// sizes map
$typography-sizes: (
  h1: 2.5rem,
  h2: 2rem,
  h3: 1.75rem,
  h4: 1.5rem,
  h5: 1.25rem,
  h6: 1rem,
  subheader: 1.125rem,
  paragraph: 1rem,
  lead: 1.25rem,
  small: 0.875rem,
  button: 1rem,
  label: 1rem,
  list-item: 1rem,
  table-heading: 1rem,
  table-data: 1rem,
  anchor: 1rem,
  legend: 1rem,
  input: 1rem,
  dt: 1rem,
  dd: 1rem,
  code: 1rem
);

$typography-sizes-mobile: (
  h1: 1.5rem,
  h2: 1.25rem,
  h3: 1.1875rem,
  h4: 1.125rem,
  h5: 1.0625rem,
  h6: 1rem,
  subheader: 1rem,
  paragraph: 1rem,
  lead: 1rem,
  small: 1rem,
  button: 1rem,
  label: 1rem,
  list-item: 1rem,
  table-heading: 1rem,
  table-data: 1rem,
  anchor: 1rem,
  legend: 1rem,
  input: 1rem,
  dt: 1rem,
  dd: 1rem,
  code: 1rem
);

$typography-classes: (
  h1: text-xxl,
  h2: text-xl,
  h3: text-lg,
  h4: text-md,
  h5: text-sm,
  h6: text-xs,
);

// weights map
$typography-weights: (
  regular: 400,
  bold: 700
);

// line heights
$typography-line-height: 1.5;
$typography-line-height-heading: 110%;

// mixins
@mixin heading-style($heading, $map, $weight: regular, $line-height: $typography-line-height-heading) {
  font-size: map-get($map, $heading);
  // font-weight: map-get($typography-weights, $weight);
  line-height: $line-height;
  font-family: $font-title;
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
  margin-bottom: 1.5rem;
}

@mixin text-style($type, $map, $weight: regular, $line-height: $typography-line-height, $color: $col-text-main) {
  font-size: map-get($map, $type);
  font-weight: map-get($typography-weights, $weight);
  line-height: $line-height;
}

@mixin link-style($map, $color: $col-text-anchor) {
  font-size: map-get($map, anchor);
  color: $color;
  text-decoration: none;
  line-height: inherit;

  // &:hover {
  //   text-decoration: none;
  // }
}

// mixin to apply typography styles based on a map
@mixin apply-typography-styles($map) {
  @each $key, $size in $map {

    // handle heading elements (h1, h2, etc.)
    @if (str-index($key, 'h')==1) {

      $new-class: map-get($typography-classes, $key);

      #{$key},
      .#{$key},
      .#{$new-class} {
        @include heading-style($key, $map);
      }
    }

    // handle anchor links
    @else if ($key ==anchor) {
      a {
        @include link-style($map);
      }
    }

    // handle other text types
    @else {
      @if ($key ==paragraph) {

        p {
          @include text-style($key, $map);
          text-wrap: pretty;
          text-rendering: optimizeLegibility;
          margin-bottom: 1rem;
        }
      }

      @else if ($key ==small) {

        .small,
        small {
          @include text-style($key, $map);
        }
      }

      @else if ($key ==list-item) {

        li,
        .#{$key} {
          @include text-style($key, $map);
        }
      }

      @else if ($key ==table-heading) {
        th {
          @include text-style($key, $map, bold);
        }
      }

      @else if ($key ==table-data) {
        td {
          @include text-style($key, $map);
        }
      }

      @else if ($key ==button) {

        button,
        .btn-main {
          @include text-style($key, $map, regular);

          span {
            line-height: $typography-line-height;
          }
        }
      }

      @else if ($key ==label) {

        label {
          @include text-style($key, $map);
          margin-bottom: 0;
        }
      }

      @else if ($key ==legend) {

        legend {
          @include text-style($key, $map);
          margin-bottom: 0;
          display: contents;
        }
      }

      @else if ($key ==input) {

        input,
        select,
        textarea {
          @include text-style($key, $map);
        }
      }

      @else if ($key ==subheader) {

        .subheader {
          @include text-style($key, $map, regular);
          font-family: $font-title;
        }
      }

      @else if ($key ==dt) {

        dt,
        dd {
          @include text-style($key, $map);
        }
      }


      @else if ($key ==code) {

        code {
          font-family: $font-main;
          padding: 0 .3125rem;
          border: 0;
          @include text-style($key, $map);
        }
      }

      @else {

        .#{$key} {
          @include text-style($key, $map);
        }
      }
    }
  }
}

// base styles and shared styles
h1,
h2,
h3,
h4,
h5,
h6,
.subheader {
  color: $col-text-heading;
  text-rendering: optimizeLegibility;
  text-wrap: balance;
}

figure {
  margin-bottom: 1.5rem;
}

p,
li,
span,
th,
td,
input,
cite,
a,
button,
select,
textarea,
label,
legend,
address,
dt,
dd,
figcaption {
  color: $col-text-main;
}

a:not([class]) {
  text-decoration: underline;
}

ul,
ol {

  li {
    p {

      +ul,
      +ol {
        margin-bottom: 1rem;
      }
    }
  }
}

// set-up main styles using the font sizes
@include apply-typography-styles($typography-sizes);

// set-up mobile styles using the font sizes
@media screen and (max-width: 39.9375em) {
  @include apply-typography-styles($typography-sizes-mobile);
}